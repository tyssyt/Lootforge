workspace = { members = ["lootforge-macros"] }

[package]
name = "lootforge"
version = "0.1.0"
authors = ["tys"]
edition = "2021"
include = ["**/*.rs", "Cargo.toml"]
rust-version = "1.81"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
lootforge_macros = { path = "./lootforge-macros" }
rand = "0.9"
rand_chacha = "0.9"
getrandom = { version = "0.3", features = ["wasm_js"]} # TODO figure out how to only enable this is for web target # version downgraded because of conflict with eframe
strum = { version = "0.27", features = ["derive"]}
web-time = "1.1"
log = "0.4"
crc = "3.2"
itertools = "0.14"
derive_more = { version = "2.0", features = ["debug", "unwrap"] }
enumset = "1.1"
enum_dispatch = "0.3"
smart-default = "0.7"
macro_rules_attribute = "0.2"

egui = { version = "0.31", default-features = false, features = ["default_fonts", "log"]}
eframe = { version = "0.31", default-features = false, features = [
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "wayland",       # To support Linux (and CI)
] } # figure out how to enable the right ones in the right target
egui_extras = { version = "0.31", default-features = false, features = ["image"]}
image = { version = "0.25", features = ["png"] }
egui_double_slider = "0.7"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = { version = "0.11", default-features = false, features = ["auto-color", "humantime"]}
home = "0.5"
windows-sys = "0.59"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = ["IdbFactory", "IdbDatabase", "IdbObjectStore", "IdbTransaction", "IdbOpenDbRequest", "IdbRequest", "IdbTransactionMode", "Window", "Blob", "DomException"] } # TODO see if we really need all of them


[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

# we could try to add a feature flag for profiling to all egui crates to get rid of that dep, but it is really small so eh
# eframe -> egui-winit -> arboard -> image includes all kind of images stuff like gif and webp, check out if we can opt out of that
#   or eframe -> image is another path to it that could be at fault
# eframe -> egui-winit depends on webbrowser??? I thought I only see windows deps??? there is a heack of a lot of recursive deps behind webbrowser -> url
#   oh that could be to open links? what in the everliving holy shit? - consider forking egui to not have that
# fun fact eframe -> egui-winit -> winit itself is not much deps...